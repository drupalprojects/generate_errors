<?php
/**
 * @file
 * Intentionally trigger errors to test system configuration.
 */

/**
 * Get HTTP status codes and their labels.
 *
 * @param string $filter
 *   Optional; defaults to all, can be 4xx and 5xx.
 *
 * @return array
 *   HTTP status code labels keyed by their status code.
 */
function generate_errors_http_status_codes($filter = 'all') {
  $http_status_codes = array();

  // 4xx Client Error.
  $http_status_codes['4xx'] = array(
    400 => t('400 Bad Request'),
    401 => t('401 Unauthorized'),
    402 => t('402 Payment Required'),
    403 => t('403 Forbidden'),
    404 => t('404 Not Found'),
    405 => t('405 Method Not Allowed'),
    406 => t('406 Not Acceptable'),
    407 => t('407 Proxy Authentication Required'),
    408 => t('408 Request Timeout'),
    409 => t('409 Conflict'),
    410 => t('410 Gone'),
    411 => t('411 Length Required'),
    412 => t('412 Precondition Failed'),
    413 => t('413 Request Entity Too Large'),
    414 => t('414 Request-URI Too Long'),
    415 => t('415 Unsupported Media Type'),
    416 => t('416 Requested Range Not Satisfiable'),
    417 => t('417 Expectation Failed'),
    418 => t("418 I'm a teapot"),
    419 => t('419 Authentication Timeout'),
    420 => t('420 Enhance Your Calm'),
    422 => t('422 Unprocessable Entity'),
    423 => t('423 Locked'),
    424 => t('424 Failed Dependency'),
    425 => t('425 Unordered Collection'),
    426 => t('426 Upgrade Required'),
    428 => t('428 Precondition Required'),
    429 => t('429 Too Many Requests'),
    431 => t('431 Request Header Fields Too Large'),
    444 => t('444 No Response'),
    449 => t('449 Retry With'),
    450 => t('450 Blocked by Windows Parental Controls'),
    451 => t('451 Unavailable For Legal Reasons'),
  );

  // 5xx Server Error.
  $http_status_codes['5xx'] = array(
    500 => t('500 Internal Server Error'),
    501 => t('501 Not Implemented'),
    502 => t('502 Bad Gateway'),
    503 => t('503 Service Unavailable'),
    504 => t('504 Gateway Timeout'),
    505 => t('505 HTTP Version Not Supported'),
    506 => t('506 Variant Also Negotiates'),
    507 => t('507 Insufficient Storage'),
    508 => t('508 Loop Detected'),
    509 => t('509 Bandwidth Limit Exceeded'),
    510 => t('510 Not Extended'),
    511 => t('511 Network Authentication Required'),
  );

  // Return all codes in a single list, useful for translating a code to a name.
  if ($filter == 'all') {
    return $http_status_codes['4xx'] + $http_status_codes['5xx'];
  }
  // Return just a subset of codes.
  if (isset($http_status_codes[$filter])) {
    return $http_status_codes[$filter];
  }
  // Oops.
  return array();
}

/**
 * Get PHP errors codes and their labels.
 *
 * @return array
 *   PHP error codes keyed by the constant with labels as their values.
 */
function generate_errors_php_errors() {
  return array(
    E_ERROR => t('E_ERROR - Error'),
    E_WARNING => t('E_WARNING - Warning'),
    E_PARSE => t('E_PARSE - Parsing Error'),
    E_NOTICE => t('E_NOTICE - Notice'),
    E_USER_ERROR => t('E_USER_ERROR - User Error'),
    E_USER_WARNING => t('E_USER_WARNING - User Warning'),
    E_USER_NOTICE => t('E_USER_NOTICE - User Notice'),
    E_STRICT => t('E_STRICT - Runtime Notice'),
    E_RECOVERABLE_ERROR => t('E_RECOVERABLE_ERROR - Catchable Fatal Error'),
  );
}
